import { Translations } from 'interfaces/translations';

export const translations: Translations = {
  // Array
  arrayContains: '$eachPrefix $property deve conter os valores $constraint1',
  arrayMaxSize: '$eachPrefix $property deve conter no máximo $constraint1 elemento(s)',
  arrayMinSize: '$eachPrefix $property deve conter pelo menos $constraint1 elemento(s)',
  arrayNotContains: '$eachPrefix $property não deve conter os valores $constraint1',
  arrayNotEmpty: '$eachPrefix $property não deve ser vazio',
  arrayUnique: 'Todos os $property devem ser únicos',

  // Common
  equals: '$eachPrefix $property deve ser igual a $constraint1',
  isDefined: '$eachPrefix $property não deve ser null nem undefined',
  isEmpty: '$eachPrefix $property deve ser vazio',
  isLatitude: '$eachPrefix $property deve ser uma latitude em string ou número',
  isLatLong: '$eachPrefix $property deve ser uma string de latitude,longitude',
  isLongitude: '$eachPrefix $property deve ser uma longitude em string ou número',
  isNotEmpty: '$eachPrefix $property não deve ser vazio',
  isNotIn: '$eachPrefix $property não pode ser nenhum dos seguintes valores: $constraint1',
  notEquals: '$eachPrefix $property não pode ser igual a $constraint1',
  validateNested: 'propriedade aninhada $property deve ser um objeto ou uma lista',
  isIn: '$eachPrefix $property deve ser um dos seguintes valores: $constraint1',
  eachPrefix: 'cada valor em',

  // Date
  maxDate: 'data máxima permitida para $eachPrefix $property é $constraint1',
  minDate: 'data mínima permitida para $eachPrefix $property é $constraint1',

  // Number
  isDivisibleBy: '$eachPrefix $property deve ser divisível por $constraint1',
  isNegative: '$eachPrefix $property deve ser um número negativo',
  isPositive: '$eachPrefix $property deve ser um número positivo',
  max: '$eachPrefix $property não pode ser maior que $constraint1',
  min: '$eachPrefix $property não pode ser menor que $constraint1',

  // Object
  isInstance: '$eachPrefix deve ser uma instância da propriedade definida',
  isNotEmptyObject: '$eachPrefix $property deve ser um objeto não vazio',

  // String
  contains: '$eachPrefix $property deve conter o texto $constraint1',
  isISO4217CurrencyCode: '$eachPrefix $property deve ser um código de moeda ISO4217 válido',
  isTaxId: '$eachPrefix $property deve respeitar o Tax Identification Number',
  isAlpha: '$eachPrefix $property deve conter somente letras (a-zA-Z)',
  isAlphanumeric: '$eachPrefix $property must contain only letters and numbers',
  isAscii: '$eachPrefix $property deve conter somente caracteres ASCII',
  isBase32: '$eachPrefix $property deve ser no formato base32',
  isBase58: '$eachPrefix $property deve ser no formato base58',
  isBase64: '$eachPrefix $property deve ser no formato base64',
  isBIC: '$eachPrefix $property deve ser um código BIC ou SWIFT',
  isBooleanString: '$eachPrefix $property deve ser uma string boolean',
  isBtcAddress: '$eachPrefix $property deve ser um endereço BTC',
  isByteLength: `$eachPrefix $property's deve conter entre $constraint1 e $constraint2 de tamanho em bytes`,
  isCreditCard: '$eachPrefix $property deve ser um cartão de crédito',
  isCurrency: '$eachPrefix $property deve ser uma moeda',
  isDataURI: '$eachPrefix $property deve ser no formato de dados URI',
  isDateString: '$eachPrefix $property deve ser uma string ISO 8601 de data válida',
  isDecimal: '$eachPrefix $property não é um número decimal válido',
  isEAN: '$eachPrefix $property deve ser um EAN (European Article Number)',
  isEmail: '$eachPrefix $property deve ser um email',
  isEthereumAddress: '$eachPrefix $property deve ser um endereço Ethereum',
  isFirebasePushId: '$eachPrefix $property deve ser um Firebase Push Id',
  isFQDN: '$eachPrefix $property deve ser um nome de domínio válido',
  isFullWidth: '$eachPrefix $property deve conter um caractere de full-width',
  isHalfWidth: '$eachPrefix $property deve conter um caractere de half-width',
  isHash: '$eachPrefix $property deve ser uma hash do tipo $constraint1',
  isHexadecimal: '$eachPrefix $property deve ser um número hexadecimal',
  isHexColor: '$eachPrefix $property deve ser uma cor em hexadecimal',
  isHSL: '$eachPrefix $property deve ser uma cor em HSL',
  isIBAN: '$eachPrefix $property deve ser um IBAN (International Bank Account Number)',
  isIdentityCard: '$eachPrefix $property deve ser um número de cartão de identidade',
  isIP: '$eachPrefix $property deve ser um endereço IP',
  isISBN: '$eachPrefix $property deve ser um ISBN',
  isISIN: '$eachPrefix $property deve ser um ISIN (stock/security identifier)',
  isISO8601: '$eachPrefix $property deve ser uma string de data do tipo ISO 8601 válida',
  isISO31661Alpha2: '$eachPrefix $property deve ser no formato de código ISO31661 Alpha2',
  isISO31661Alpha3: '$eachPrefix $property deve ser no formato de código ISO31661 Alpha3',
  isISRC: '$eachPrefix $property deve ser um ISRC',
  isISSN: '$eachPrefix $property deve ser um ISSN',
  isJSON: '$eachPrefix $property deve ser uma string em json',
  isJWT: '$eachPrefix $property deve ser uma string em jwt',
  isLocale: '$eachPrefix $property deve ser um locale',
  isLowercase: '$eachPrefix $property deve ser uma string com letras em minúsculo',
  isMACAddress: '$eachPrefix $property deve ser um endereço MAC',
  isMagnetURI: '$eachPrefix $property deve ser uma uri no formato de magnet link',
  isMilitaryTime: '$eachPrefix $property deve ser uma representação válida do tempo em formato militar HH:MM',
  isMimeType: '$eachPrefix $property deve ser no formato MIME type',
  isMobilePhone: '$eachPrefix $property deve ser um número de telefone móvel',
  isMongoId: '$eachPrefix $property deve ser um id do mongodb',
  isMultibyte: '$eachPrefix $property deve conter um ou mais caracteres multibyte',
  isNumberString: '$eachPrefix $property deve ser um número em string',
  isOctal: '$eachPrefix $property deve ser um número octal válido',
  isPassportNumber: '$eachPrefix $property deve ser um número de passaporte válido',
  isPhoneNumber: '$eachPrefix $property deve ser um número de telefone válido',
  isPort: '$eachPrefix $property deve ser uma porta',
  isPostalCode: '$eachPrefix $property deve ser um código postal',
  isRFC3339: '$eachPrefix $property deve ser uma data no formato RFC 3339',
  isRgbColor: '$eachPrefix $property deve ser uma cor em RGB',
  isSemVer: '$eachPrefix $property deve ser no formato Semantic Versioning Specification',
  isStrongPassword: '$eachPrefix $property não é forte o suficiente',
  isSurrogatePair: '$eachPrefix $property deve conter algum caractere surrogate pairs',
  isTimeZone: '$eachPrefix $property deve ser um time-zone IANA válido',
  isUppercase: '$eachPrefix $property deve ser uma string com letras em maiúsculo',
  isUrl: '$eachPrefix $property deve ser uma URL válida',
  isUUID: '$eachPrefix $property deve ser um UUID',
  isVariableWidth: '$eachPrefix $property deve conter um caractere full-width e outro half-width',
  length: '$eachPrefix $property deve ser maior ou igual a $constraint1 e menor ou igual a $constraint2 caracteres',
  matches: '$eachPrefix $property deve respeitar a expressão regular $constraint1',
  maxLength: '$eachPrefix $property deve ser menor ou igual a $constraint1 caracteres',
  minLength: '$eachPrefix $property deve ser maior ou igual a $constraint1 characters',
  notContains: '$eachPrefix $property não pode conter a string $constraint1',

  // Typechecker
  isArray: '$eachPrefix $property deve ser uma lista',
  isBoolean: '$eachPrefix $property deve ser um valor boleano',
  isDate: '$eachPrefix $property deve ser uma data',
  isEnum: '$eachPrefix $property deve ser um dos seguintes valores: $constraint2',
  isInt: '$eachPrefix $property deve ser um número inteiro',
  isNumber: '$eachPrefix $property deve ser um número conforme o que foi definido no contrato',
  isObject: '$eachPrefix $property deve ser um objeto',
  isString: '$eachPrefix $property deve ser uma string',
};
